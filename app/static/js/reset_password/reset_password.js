// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var $account_id, $alert, $code, $formBody, $formInputs, $password1, $password2, $submitButton, displayError, displaySuccess;
    $formBody = $('.reset-password-form .proj-form-body');
    $formInputs = $formBody.find('> input');
    $alert = $formBody.find('> .alert');
    $account_id = $('#account_id');
    $code = $('#code');
    $password1 = $('#password1');
    $password2 = $('#password2');
    $submitButton = $formBody.find('.reset-password-button');
    $formInputs.first().get(0).focus();
    $code.add($password1).add($password2).keypress(function(event) {
      var code;
      code = event.keyCode ? event.keyCode : event.charCode;
      if (code === 13) {
        return $submitButton.trigger('click');
      }
    });
    $submitButton.click(function(event) {
      var code, password1, password2,
        _this = this;
      event.preventDefault();
      code = $code.val();
      if (code === '') {
        displayError('Missing code field');
        $formInputs.get(0).focus();
        return;
      }
      password1 = $password1.val();
      password2 = $password2.val();
      if (password1 === '') {
        displayError('Missing password field');
        $formInputs.get(1).focus();
        return;
      } else if (password2 === '') {
        displayError('Missing password field');
        $formInputs.get(2).focus();
        return;
      } else if (password1 !== password2) {
        displayError('Mismatching password fields');
        $formInputs.get(1).focus();
        return;
      }
      $submitButton.button('loading');
      $alert.hide();
      return $.ajax({
        type: 'PUT',
        dataType: 'json',
        contentType: 'application/json',
        url: '/api/accounts/' + $account_id.val(),
        data: JSON.stringify({
          action: 'reset_password',
          code: code,
          password: password1
        }),
        success: function(json) {
          displaySuccess('Logging in...');
          return setTimeout((function() {
            return window.location.href = 'http://' + window.location.host;
          }), 750);
        },
        error: function(jqXHR) {
          var json;
          json = JSON.parse(jqXHR.responseText);
          return displayError(json[_.keys(JSON.parse(jqXHR.responseText))[0]]);
        },
        complete: function(jqXHR) {
          $submitButton.button('reset');
          return $formInputs.get(0).focus();
        }
      });
    });
    displayError = function(msg) {
      return $alert.removeClass('alert-success').find('span').text(msg).end().addClass('alert-error').show();
    };
    return displaySuccess = function(msg) {
      return $alert.removeClass('alert-error').find('span').text(msg).end().addClass('alert-success').show();
    };
  });

}).call(this);
